/* Complete workspace.component.scss with support for both
   horizontal panel resizing and vertical editor resizing */

   :host {
    flex: 1 1 auto;
    display: flex;
    min-width: 0;
    min-height: 0;
  }

  /* Chain of wrappers */
  .workspace-container,
  .desktop-workspace {
    flex: 1 1 auto;
    display: flex;
    min-width: 0;
    min-height: 0;
  }

  /* Left / right columns */
  .editor-panel {
    min-width: 0;
    display: flex;
    flex-direction: column;
    height: 100%;

    /* Width handling - will be set inline for resizing */
    width: var(--editor-basis, 40%);
    flex: 0 0 auto;

    /* Transition for smoother resizing experience */
    transition: width 0.05s ease;

    /* IMPORTANT: Allow vertical overflow for the resizable editor */
    overflow-y: auto;
    overflow-x: hidden;
  }

  .diagram-panel {
    min-width: 0;
    display: flex;
    height: 100%;
    overflow: hidden;

    /* Flex grow to take remaining space */
    flex: 1;

    /* Smooth transition for resizing */
    transition: width 0.05s ease;
  }

  /* Main container */
  .workspace-container {
    box-sizing: border-box;
    display: flex;
    flex-direction: row;
    align-items: stretch;
    padding: 8px;
    gap: 8px;
    width: 100%;
    height: 100%;
    background: var(--primary-bg);
    border: 1px solid var(--border-color);
    box-shadow: var(--shadow-sm);
    border-radius: var(--border-radius-lg);

    /* Allow vertical scrolling for tall editor content */
    overflow-x: hidden;
    overflow-y: auto;

    /* Mobile layout should be stacked */
    @media (max-width: 768px) {
      flex-direction: column;
      height: auto;
      min-height: 100vh;
      overflow: visible;
    }

    .desktop-workspace {
      display: flex;
      width: 100%;
      height: 100%;
      min-height: 0;

      /* Allow content to overflow when editor is resized */
      overflow: visible;

      .editor-panel {
        border-radius: var(--border-radius-lg);
        background: var(--secondary-bg);
        border: 1px solid var(--border-color);
        padding: 16px;
        gap: 12px;
        display: flex;
        flex-direction: column;

        /* Container for the editor component */
        .editor-container {
          flex: 1;
          display: flex;
          flex-direction: column;
          min-height: 0;
          /* Allow editor to resize and grow if needed */
          overflow: visible;
        }
      }

      /* Resizer between panels */
      .resizer {
        width: 6px;
        background-color: var(--border-color);
        cursor: col-resize;
        flex-shrink: 0;
        z-index: 10;

        /* Visual feedback when hovering/active */
        &:hover, &.active {
          background-color: var(--text-secondary);
        }

        /* Make the click target larger for better UX */
        position: relative;

        &::after {
          content: '';
          position: absolute;
          top: 0;
          left: -5px;
          right: -5px;
          bottom: 0;
          cursor: col-resize;
        }
      }

      .diagram-panel {
        border-radius: var(--border-radius-lg);
        background: var(--primary-bg);
      }
    }

    /* Shared tab styles */
    .editor-tabs, .mobile-tabs {
      display: flex;
      flex-direction: row;
      align-items: flex-start;
      padding: 5px;
      width: 100%;
      height: 42px;
      background: var(--tertiary-bg);
      border-radius: var(--border-radius-md);
      flex-shrink: 0;

      button, .docs-link {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        padding: 6px 12px;
        gap: 10px;
        height: 32px;
        border-radius: var(--border-radius-sm);
        border: none;
        background: transparent;
        font-family: inherit;
        font-style: normal;
        font-weight: 500;
        font-size: 14px;
        line-height: 20px;
        color: var(--text-secondary);
        cursor: pointer;
        flex-grow: 1;
        text-decoration: none;

        .icon {
           width: 16px;
           height: 16px;
        }

        &.active {
          background: var(--primary-bg);
          color: var(--text-primary);
          box-shadow: var(--shadow-sm);
        }

        &:hover:not(.active) {
           background-color: rgba(0, 0, 0, 0.03);
        }
      }

      .docs-link {
        flex-grow: 0;
        margin-left: auto;
        color: var(--text-tertiary);
      }
    }

    /* Mobile tabs - hidden by default */
    .mobile-tabs {
      display: none;
      margin-top: 8px;
    }

    /* Mobile layout adjustments */
    @media (max-width: 768px) {
      .desktop-workspace {
        flex-direction: column;
        height: auto;
        overflow: visible;

        .editor-panel {
          width: 100% !important; /* Force full width on mobile */
          height: auto;
          min-height: 300px;
          padding: 8px;
        }

        .resizer {
          display: none; /* Hide resizer on mobile */
        }

        .diagram-panel {
          width: 100% !important; /* Force full width on mobile */
          height: 50vh;
          min-height: 300px;
        }

        /* Hide panels based on selected tab */
        .editor-panel:not(.visible-mobile),
        .diagram-panel:not(.visible-mobile) {
          display: none;
        }
      }

      /* Show mobile tabs */
      .mobile-tabs {
        display: flex;
      }
    }

    /* General editor container */
    .editor-container {
      flex: 1;
      display: flex;
      min-height: 0;
      border-radius: var(--border-radius-lg);
      overflow: hidden;
      border: 1px solid var(--border-color);
      background: var(--primary-bg);
    }
  }

  /* Missing icon definitions */
  .icon-help {
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path><line x1="12" y1="17" x2="12.01" y2="17"></line></svg>');
  }

  .icon-chart {
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="18" y1="20" x2="18" y2="10"></line><line x1="12" y1="20" x2="12" y2="4"></line><line x1="6" y1="20" x2="6" y2="14"></line><line x1="2" y1="20" x2="22" y2="20"></line></svg>');
  }

  /* Dark theme support */
  :host-context(.dark-theme) {
    .workspace-container {
      background: var(--dark-primary-bg, #1a1a1a);
      border-color: var(--dark-border-color, #444);

      .desktop-workspace {
        .editor-panel {
          background: var(--dark-secondary-bg, #2a2a2a);
          border-color: var(--dark-border-color, #444);
        }

        .resizer {
          background-color: var(--dark-border-color, #444);

          &:hover, &.active {
            background-color: var(--dark-accent-color, #64b5f6);
          }
        }

        .diagram-panel {
          background: var(--dark-primary-bg, #1a1a1a);
        }
      }

      .editor-tabs, .mobile-tabs {
        background-color: var(--dark-tertiary-bg, #2d2d2d);

        button, .docs-link {
          color: var(--dark-text-secondary, #b0b0b0);

          &.active {
            color: var(--dark-text-primary, #e0e0e0);
            background-color: var(--dark-secondary-bg, #2a2a2a);
            box-shadow: var(--dark-shadow-sm, 0px 1px 2px rgba(0, 0, 0, 0.2));
          }

          &:hover:not(.active) {
            background-color: rgba(255, 255, 255, 0.05);
          }
        }

        .docs-link {
          color: var(--dark-text-tertiary, #cccccc);
        }
      }

      .editor-container {
        background: var(--dark-secondary-bg, #2a2a2a);
        border-color: var(--dark-border-color, #444);
      }
    }
  }
